syntax = "proto3";

package com.example.protos;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  rpc GetData (GetDataRequest) returns (GetDataResponse) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

// A request for getting some data
message GetDataRequest {
  // TODO: Add key info on data requested (id, rows, etc.)

  // FIXME: Nest this in a one_of -> pythonInfo | scala info | etc.
  PythonCallerInfo callerInfo = 1;
}

message PythonCallerInfo {
  string fileName = 1;
  int64 lineNumber = 2;
}

// A request for getting some data
message GetDataResponse {
  // FIXME: This should really return chunks of data, perhaps with some other metadata
  string foo = 1;
}


// rpc ListFeatures(Rectangle) returns (stream Feature) {}